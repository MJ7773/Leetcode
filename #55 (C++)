https://leetcode.com/problems/jump-game/submissions/

//dp , T=O(n)
class Solution {
public:
    bool canJump(vector<int>& nums) {
        int len = nums.size();
        vector<bool> dp(len, 0);
        dp[0] = true;
        
        for(int i=1; i<len; ++i){
            for(int j=i-1; j>=0; --j){
                if(dp[j] && j+nums[j]>=i){
                    dp[i] = true;
                    break;
                }
            }
        }  
        return dp[len-1];
    }
};

//T=O(n)
class Solution {
public:
    bool canJump(vector<int>& nums) {
        int jump = 0;
        for(int i=0; i<=jump; ++i){
            jump = max(jump, i+nums[i]);
            if(jump >= nums.size()-1) return true;
        }
        return false;
    }
};
