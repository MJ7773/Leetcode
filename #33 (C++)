//https://leetcode.com/problems/search-in-rotated-sorted-array/description/

class Solution {
public:
    int search(vector<int>& nums, int target) {
        int s=0, e=nums.size()-1;
        int mid=e/2;
        
        while(s<=e){
            if(nums[mid] == target) return mid;

            if(nums[0] <= nums[mid]) s = ++mid;
            else e = --mid;
            mid = (s+e)/2;
        }

        int pivot = e;

        if(target>=nums[0] && target<=nums[pivot]){
            s = 0;
            e = pivot;
        }
        else{
            s = pivot;
            e = nums.size()-1;
        }

        while(s<=e){
            mid = (s+e)/2;
            if(nums[mid]==target) return mid;

            if(nums[mid] < target) s = ++mid;
            else e = --mid;
        }
        return -1;
    }
};

//T=O(logN)
