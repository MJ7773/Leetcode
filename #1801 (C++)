//https://leetcode.com/problems/number-of-orders-in-the-backlog/

class Solution {
public:
    int getNumberOfBacklogOrders(vector<vector<int>>& orders) {
        priority_queue<vector<int>> buy;
        priority_queue<vector<int>, vector<vector<int>>, greater<vector<int>>> sell;

        for(auto order : orders){
            if(order[2] == 0) buy.push(order);
            else sell.push(order);

            while(!buy.empty() && !sell.empty() && sell.top()[0] <= buy.top()[0]){
                auto btop = buy.top();
                buy.pop();
                auto stop = sell.top();
                sell.pop();

                int diff = btop[1] - stop[1];
                if(diff > 0){
                    btop[1] = diff;
                    buy.push(btop);
                }
                else if(diff < 0){
                    stop[1] = abs(diff);
                    sell.push(stop);
                }
            }
        }

        int ans = 0;
        int mod = 1e9+7;
        while(!buy.empty()){
            ans = (ans + buy.top()[1]) % mod;
            buy.pop();
        }
        while(!sell.empty()){
            ans = (ans + sell.top()[1]) % mod;
            sell.pop();
        }
        return ans;
    }
};
