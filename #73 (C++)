## https://leetcode.com/problems/set-matrix-zeroes/description/
# Approach : mark matrix[0][j]=0 and matrix[i][0]=0 when matrix[i][j]==0(when i>0 && j>0)
#            and replace those row and column marked as 0 (only for i>0 && j>0, because we refer the marked 0, not originally 0)
#            so that prevent the whole matrix is replaced as zero.

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {        
        
        int m = matrix.size();
        int n = matrix[0].size();
        
        bool firstRow = false;
        bool firstCol = false;
        
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(matrix[i][j] == 0){
                    if(i==0) firstRow = true;
                    if(j==0) firstCol = true;
                    
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        
        for(int i=1; i<m; i++){
            for(int j=1; j<n; j++){
                if(matrix[i][0] == 0 || matrix[0][j] == 0) matrix[i][j] = 0;
            }
        }
        
        if(firstRow) for(int i=0; i<n; i++) matrix[0][i] = 0;
        if(firstCol) for(int i=0; i<m; i++) matrix[i][0] = 0;
    
    }
};

//// T = O(mn)
//// S = O(1)
