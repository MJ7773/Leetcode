//https://leetcode.com/problems/move-zeroes/description/

//Swap approach
class Solution {
    public void moveZeroes(int[] nums) {
        int idx_zero = 0;
        for(int i=0; i<nums.length; ++i){
            if(nums[i]!=0 && nums[idx_zero]==0){
                //swap
                nums[idx_zero] = nums[i];
                nums[i] = 0;
            }
            if(nums[idx_zero]!=0) ++idx_zero;
        }
    }
}
// T=O(N), S=O(1)

//Shift all the non zero element to left in order and fill zeros for the rest
class Solution {
    public void moveZeroes(int[] nums) {
        if(nums.length == 1) return ;

        int idxNonZero = 0;

        for(int i=0; i<nums.length; ++i){
            if(nums[i] != 0){
                nums[idxNonZero] = nums[i];
                ++idxNonZero;
            }
        }
        while(idxNonZero < nums.length){
            nums[idxNonZero] = 0;
            ++idxNonZero;
        }
    }
}
//T=O(N), S=O(1)
