/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
        if(!root) return {};
        
        Node* cur=root;
        Node* nextlevel=root;
        
        while(nextlevel){
            cur = nextlevel;
            
            while(cur){
              if(cur->left){
                    cur->left->next = cur->right;
                    if(cur->next) cur->right->next = cur->next->left;
                }
                cur = cur->next;  
            }
            nextlevel = nextlevel->left;
        }
        return root;      
    }
};


/// T = O(1)
