## https://leetcode.com/problems/set-matrix-zeroes/description/
# Approach : mark matrix[0][j]=0 and matrix[i][0]=0 when matrix[i][j]==0(when i>0 && j>0)
#            and replace those row and column marked as 0 (only for i>0 && j>0, because we refer the marked 0, not originally 0)
#            so that prevent the whole matrix is replaced as zero.

class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        
        m = len(matrix)
        n = len(matrix[0])
        firstRow = False
        firstCol = False

        for i in range(0, m):
            for j in range(0,n):
                if matrix[i][j]==0:
                    if i==0 : firstRow = True
                    else: matrix[0][j] = 0
                    if j==0 : firstCol = True
                    else: matrix[i][0] = 0

        for i in range(1, m):
            for j in range(1,n):
                if matrix[0][j]==0 or matrix[i][0]==0:
                    matrix[i][j] = 0
        
        if firstRow :
            for j in range(0,n):
                matrix[0][j] = 0           

        if firstCol:
            for i in range(0,m):
                matrix[i][0] = 0
## T=O(N)
## S=O(1)
