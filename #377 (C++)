//https://leetcode.com/problems/combination-sum-iv/submissions/
//**Be sure for overflow - the final answer is surely in 32-bit int but the intermediate dp[i] could be greater than INT_MAX

//T=O(n^2)
class Solution {
public:
    int combinationSum4(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end()); //O(nlogn)
        vector<unsigned int> dp(target+1, 0);
        dp[0] = 1;
        
        for(int i=1; i<=target; ++i){
            for(int n : nums){
                if(i < n) break;
                dp[i] += dp[i-n];
            }
        }
        return dp[target];
    }
};
