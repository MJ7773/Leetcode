class Solution {
public:
    int trap(vector<int>& height) {
        int water = 0;
        int lmax = height[0], rmax = height[height.size()-1];
        int lpos = 1, rpos = height.size()-2;

        while(lpos <= rpos){
            if(height[lpos] >= lmax) lmax = height[lpos++];
            else if(height[rpos] >= rmax) rmax = height[rpos--];
            else if(lmax <= rmax) water += lmax - height[lpos++];
            else water += rmax - height[rpos--];

        }
        return water;
    }
};

/* Approach
0 1 0 2 1 0 1 3 2 1 2 1 //height
0 1 1 2 2 2 2 3 3 3 3 3 //lmax
3 3 3 3 3 3 3 3 2 2 2 1 //rmax
=> water += min(lmax,rmax) - height[i]
0 0 1 0 1 2 1 0 0 1 0 0 //water
*/
