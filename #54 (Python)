## https://leetcode.com/problems/spiral-matrix/description/

class Solution:
    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
        top, left = 0, 0
        bottom, right = len(matrix)-1, len(matrix[0])-1
        d = 1

        output = []

        while left<=right and top<=bottom :
            if d == 1: #go right
                for j in range(left, right+1):
                    output.append(matrix[top][j])
                d = 2
                top += 1
            
            elif d == 2: #go down
                for i in range(top, bottom+1):
                    output.append(matrix[i][right])
                d = 3
                right -= 1
            
            elif d==3: #go left
                for j in range(right, left-1, -1):
                    output.append(matrix[bottom][j])
                d = 4
                bottom -= 1
            
            else: # go up
                for i in range(bottom, top-1, -1):
                    output.append(matrix[i][left])
                d = 1
                left += 1
                
        return output

# T=O(m*n)
