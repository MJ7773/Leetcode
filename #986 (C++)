// https://leetcode.com/problems/interval-list-intersections/description/
 
// Approach : Intalval
// T=O(n)
class Solution {
public:
    vector<vector<int>> intervalIntersection(vector<vector<int>>& firstList, vector<vector<int>>& secondList) {
        vector<vector<int>> interval;

        int i=0, j=0;

        while(i<firstList.size() && j<secondList.size()){
            int f = max(firstList[i][0], secondList[j][0]);
            int r = min(firstList[i][1], secondList[j][1]);

            if(f<=r) interval.push_back({f, r});

            if(firstList[i][1] < secondList[j][1]) ++i;
            else ++j;
        }

        return interval;
    }
};
