https://leetcode.com/problems/longest-palindromic-substring/submissions/

//DP, T=S=O(n^2)

class Solution {
public:
    string longestPalindrome(string s) {
        int len = s.size();
        bool dp[len][len]; // dp[i][j]='true' if the string from index i to j is a palindrome.
        memset(dp, 0, sizeof(dp));
        
        string ans="";
        ans += s[0];
        
        for(int i=0; i<len; ++i) dp[i][i] = true;
         
        for(int i=1; i<len; ++i){
            for(int j=i-1; j>=0; --j){
                if(s[j]==s[i]){
                    if(i-j==1 || dp[j+1][i-1]==true){
                        dp[j][i]=true;
                        if(i-j+1 > ans.size()) ans = s.substr(j, i-j+1); 
                    } 
                }
            }
        }
        return ans;
    }
};
