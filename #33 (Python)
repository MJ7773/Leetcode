#https://leetcode.com/problems/search-in-rotated-sorted-array/description/

class Solution:
    def search(self, nums: List[int], target: int) -> int:     
        n = len(nums)

        if n==1 :
            if nums[0]==target : return 0
            else : return -1
        
        s = 0
        e = n-1

        while s<=e :
            m = (s+e)//2
            if nums[m] == target:
                return m
            elif nums[0] <= nums[m]:
                s = m+1
            else:
                e = m-1
        
        pivot = e
        if target>=nums[0] and target<=nums[pivot]:
            s = 0
            e = pivot
        else:
            s = pivot
            e = n-1

        while s<=e:
            m = (s+e)//2
            if nums[m] == target:
                return m
            elif nums[m] > target:
                e = m-1
            else: s = m+1
        
        return -1
